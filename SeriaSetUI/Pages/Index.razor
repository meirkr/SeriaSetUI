@page "/"
@using Microsoft.Extensions.FileSystemGlobbing.Internal.PatternContexts
@using SeriaSetUI.Components
@using SeriaSetUI.Extensions
@using SeriaSetUI.Models
@*
<table>
    <tr>
        <td>
            <Card NumShapes="2" Shape="new Triangle() { Color = Color.Red, BorderStyle = LineStyle.Dash }" />
        </td>
        <td>
            <Card NumShapes="1" Shape="new Rectangle() { Color = Color.Green, BorderStyle = LineStyle.Regular }" />
        </td>
        <td>
            <Card NumShapes="3" Shape="new Elipse() { Color = Color.Blue, BorderStyle = LineStyle.Dots }" />
        </td>
    </tr>
</table>*@
<table>
    @foreach (var line in GetAllCardsInfos().Batch(9))
    {
        <tr>
            @foreach (var (shape, numShapes) in line)
            {
                <td>
                    <Card NumShapes="numShapes" Shape="shape" />
                </td>
            }
        </tr>
    }

</table>
<h1>Hello, world!</h1>

Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?" />


@code {
    private static IShape[] GetAllShapes()
    {
        var allShapes = new IShape[]
        {
            new Triangle(),
            new Rectangle(),
            new Elipse(),
        };
        return allShapes;
    }

    private static IEnumerable<T> GetAllEnumValues<T>() 
        where T : Enum
    {
        return Enum.GetValues(typeof(T)).Cast<T>();
    }

    private IEnumerable<(IShape Shape, uint NumShapes)> GetAllCardsInfos()
    {
        foreach (var color in GetAllEnumValues<Color>())
        {
            foreach (var borderStyle in GetAllEnumValues<LineStyle>())
            {
                foreach (var shape in GetAllShapes())
                {
                    shape.Color = color;
                    shape.BorderStyle = borderStyle;

                    foreach (var numShapes in Enumerable.Range(1, 3))
                    {
                        yield return (shape, (uint)numShapes);
                    }
                }
            }
        }
    }
}
